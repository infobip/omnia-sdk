[tool.poetry]
name = "omnia-sdk"
version = "0.1.0"
description = ""
authors = ["Team 42"]

readme = "README.md"
[tool.poetry.dependencies]
python = ">=3.12, <3.14"
holidays = "^0.66"
langgraph = "^0.2.70"
pytest = "^8.3.4"
starlette = "^0.45.3"
requests = "^2.32.3"
numpy = "^2.2.4"
openai = "^1.68.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

##########################
# Ruff configuration
##########################
[tool.ruff]
line-length = 140
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.format]
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Exclude a variety of commonly ignored directories.
[tool.ruff.lint]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Rules can be found here: https://docs.astral.sh/ruff/rules
select = [
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

ignore = [
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"] # unused import rule will be ignored in __init__.py files

[tool.ruff.lint.isort]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "ib-internal",
    "project-local",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
